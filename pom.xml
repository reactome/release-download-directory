<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
		 xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
		 xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>org.reactome.release</groupId>
	<artifactId>download-directory</artifactId>
	<version>1.0.2-SNAPSHOT</version>
	<packaging>jar</packaging>

	<name>${project.groupId}:${project.artifactId}</name>
	<description>Generation of files for the Reactome website download directory</description>
	<url>https://github.com/reactome/release-download-directory</url>

	<organization>
		<name>Reactome</name>
		<url>https://reactome.org</url>
	</organization>

	<licenses>
		<license>
			<name>GNU AFFERO GENERAL PUBLIC LICENSE</name>
			<url>https://www.gnu.org/licenses/agpl-3.0.txt</url>
		</license>
	</licenses>

	<developers>
		<developer>
			<id>cookersjs</id>
			<name>Justin Cook</name>
			<roles>
				<role>alumni</role>
			</roles>
		</developer>
	</developers>

	<scm>
		<connection>scm:git:git://github.com/reactome/release-download-directory.git</connection>
		<developerConnection>scm:git:ssh://github.com/reactome/release-download-directory.git</developerConnection>
		<url>https://github.com/reactome/release-download-directory</url>
		<tag>develop</tag>
	</scm>

	<properties>
		<!-- dependencies -->
		<biopax.version>5.1.0</biopax.version>
		<biopax.validator.version>4.0.0</biopax.validator.version>
		<commons.compress.version>1.19</commons.compress.version>
		<commons.io.version>2.4</commons.io.version>
		<eclipse.jgit.version>4.8.0.201706111038-r</eclipse.jgit.version>
		<hamcrest.version>2.1</hamcrest.version>
		<jcl.over.slf4j.version>1.7.25</jcl.over.slf4j.version>
		<jdom.version>1.1</jdom.version>
		<json.simple.version>1.1.1</json.simple.version>
		<junit.version>4.12</junit.version>
		<log4j.version>2.11.0</log4j.version>
		<logback.version>1.2.3</logback.version>
		<mysql.connector.version>5.1.47</mysql.connector.version>
		<powermock.version>1.6.5</powermock.version>
		<reactome.pathway.exchange.version>1.0.1</reactome.pathway.exchange.version>
		<reactome.release.common.lib.version>1.2.0</reactome.release.common.lib.version>
		<spring.version>4.2.4.RELEASE</spring.version>

		<!-- build -->
		<jdk.version>1.8</jdk.version>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>

		<!-- maven build and plugins -->
		<maven.assembly.version>3.2.0</maven.assembly.version>
		<maven.compiler.version>3.8.1</maven.compiler.version>
		<maven.failsafe.version>2.22.2</maven.failsafe.version>
		<maven.jar.version>3.2.0</maven.jar.version>
		<maven.release.version>2.5.3</maven.release.version>
		<maven.tidy.version>1.1.0</maven.tidy.version>

		<!--
		integration tests run by default when running the command "mvn verify"; can be overridden using the option
		"-DskipITs=true"
		-->
		<skipITs>false</skipITs>
	</properties>

	<dependencies>
		<!-- Main dependencies -->
		<dependency>
			<groupId>ch.qos.logback</groupId>
			<artifactId>logback-classic</artifactId>
			<version>${logback.version}</version>
			<scope>runtime</scope>
		</dependency>

		<dependency>
			<groupId>commons-io</groupId>
			<artifactId>commons-io</artifactId>
			<version>${commons.io.version}</version>
		</dependency>

		<dependency>
			<groupId>com.googlecode.json-simple</groupId>
			<artifactId>json-simple</artifactId>
			<version>${json.simple.version}</version>
		</dependency>

		<dependency>
			<groupId>mysql</groupId>
			<artifactId>mysql-connector-java</artifactId>
			<version>${mysql.connector.version}</version>
		</dependency>

		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-compress</artifactId>
			<version>${commons.compress.version}</version>
		</dependency>

		<dependency>
			<groupId>org.apache.logging.log4j</groupId>
			<artifactId>log4j-core</artifactId>
			<version>${log4j.version}</version>
		</dependency>

		<!-- release-common-lib must be before BioPAX dependencies to avoid conflict between libraries -->
		<dependency>
			<groupId>org.reactome.release</groupId>
			<artifactId>release-common-lib</artifactId>
			<version>${reactome.release.common.lib.version}</version>
		</dependency>

		<dependency>
			<groupId>org.biopax.paxtools</groupId>
			<artifactId>paxtools-core</artifactId>
			<version>${biopax.version}</version>
		</dependency>

		<dependency>
			<groupId>org.biopax.paxtools</groupId>
			<artifactId>paxtools-trove</artifactId>
			<version>${biopax.version}</version>
			<scope>runtime</scope>
		</dependency>

		<dependency>
			<groupId>org.biopax.validator</groupId>
			<artifactId>biopax-validator</artifactId>
			<version>${biopax.validator.version}</version>
		</dependency>

		<dependency>
			<groupId>org.eclipse.jgit</groupId>
			<artifactId>org.eclipse.jgit</artifactId>
			<version>${eclipse.jgit.version}</version>
		</dependency>

		<dependency>
			<groupId>org.jdom</groupId>
			<artifactId>jdom</artifactId>
			<version>${jdom.version}</version>
		</dependency>

		<!-- Locally installed pathway exchange jar -->
		<dependency>
			<groupId>org.reactome.pathway-exchange</groupId>
			<artifactId>pathwayExchange</artifactId>
			<version>${reactome.pathway.exchange.version}</version>
		</dependency>

		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>jcl-over-slf4j</artifactId>
			<version>${jcl.over.slf4j.version}</version>
			<scope>runtime</scope>
		</dependency>

		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-context</artifactId>
			<version>${spring.version}</version>
		</dependency>

		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-instrument</artifactId>
			<version>${spring.version}</version>
		</dependency>

		<!-- Test dependencies -->
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>${junit.version}</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.hamcrest</groupId>
			<artifactId>hamcrest</artifactId>
			<version>${hamcrest.version}</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.powermock</groupId>
			<artifactId>powermock-api-mockito</artifactId>
			<version>${powermock.version}</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.powermock</groupId>
			<artifactId>powermock-module-junit4</artifactId>
			<version>${powermock.version}</version>
			<scope>test</scope>
		</dependency>
	</dependencies>

	<build>
		<finalName>${project.artifactId}</finalName>

		<plugins>
			<!-- sets the Java compiler version targeted by Maven -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>${maven.compiler.version}</version>
				<configuration>
					<source>${jdk.version}</source>
					<target>${jdk.version}</target>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jar-plugin</artifactId>
				<version>${maven.jar.version}</version>
				<configuration>
					<archive>
						<manifest>
							<mainClass>org.reactome.release.downloaddirectory.Main</mainClass>
							<addClasspath>true</addClasspath>
							<classpathPrefix>lib/</classpathPrefix>
						</manifest>
					</archive>
				</configuration>
			</plugin>

			<!--
			allows 'mvn clean compile assembly:single' command to create a jar with dependencies

			execution section also allows 'mvn clean package' command to create two jars - with/without dependencies
			-->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-assembly-plugin</artifactId>
				<version>${maven.assembly.version}</version>
				<configuration>
					<descriptors>
						<descriptor>src/main/resources/assembly.xml</descriptor>
					</descriptors>
				</configuration>
				<executions>
					<execution>
						<id>make-assembly</id> <!-- this is used for inheritance merges -->
						<phase>package</phase> <!-- bind to the packaging phase -->
						<goals>
							<goal>single</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-failsafe-plugin</artifactId>
				<version>${maven.failsafe.version}</version>
				<executions>
					<execution>
						<id>integration-tests</id>
						<goals>
							<goal>integration-test</goal>
							<goal>verify</goal>
						</goals>
						<configuration>
							<!--
							Default value is defined in the <properties> section and will be applied to integration
							tests when running the command "mvn verify", but can be overwritten to either skip
							or run integration tests with the command "mvn verify -DskipITs=[true|false]"
							-->
							<skipTests>${skipITs}</skipTests>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<!--
			allows 'mvn release' command to create a new release of the project
			https://maven.apache.org/maven-release/maven-release-plugin/
			-->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-release-plugin</artifactId>
				<version>${maven.release.version}</version>
				<configuration>
					<autoVersionSubmodules>true</autoVersionSubmodules>
					<useReleaseProfile>false</useReleaseProfile>
					<releaseProfiles>release</releaseProfiles>
					<goals>deploy</goals>
					<tagNameFormat>v@{project.version}</tagNameFormat>
				</configuration>
			</plugin>

			<!--
			checks the POM file has the order specified by the POM Code Convention
			http://maven.apache.org/developers/conventions/code.html#POM_Code_Convention
			-->
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>tidy-maven-plugin</artifactId>
				<version>${maven.tidy.version}</version>
				<executions>
					<execution>
						<id>validate</id>
						<phase>validate</phase>
						<goals>
							<goal>check</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>
</project>
